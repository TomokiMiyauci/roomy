name: test

on:
  push:
      branches:
        - develop
      paths:
        - 'packages/client/**'
        - '.github/workflows/test-client.yml'

jobs:
  setup:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [13, 14]

    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@master

      - name: cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: install
        run: yarn --check-files --frozen-lockfile --non-interactive --ignore-engines

      - name: cache workspace
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-nuxt-${{ github.sha }}

  lint:
    needs: setup
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [13, 14]

    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@master

      - name: restore workspace cache
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-nuxt-${{ github.sha }}

      - name: lint by ESlint
        run: yarn workspace client lint

      - name: lint by VTC
        run: yarn workspace client lint:template

      - name: lint by Stylelint
        run: yarn workspace client lint:css

  audit:
    needs: setup
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [13, 14]

    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@master

      - name: restore workspace cache
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-nuxt-${{ github.sha }}

      - name: audit
        run: yarn workspace client run audit

  # test-unit:
  #   needs: setup
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #       node: [10, 14]

  #   steps:
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ matrix.node }}

  #     - name: checkout
  #       uses: actions/checkout@master

  #     - name: restore workspace cache
  #       uses: actions/cache@v1
  #       with:
  #         path: ${{ github.workspace }}
  #         key: ${{ matrix.os }}-node-v${{ matrix.node }}-nuxt-${{ github.sha }}

  #     - name: test unit
  #       run: yarn workspace client test:unit --ci

  #     - name: upload coverage
  #       if: matrix.node == 14
  #       uses: codecov/codecov-action@master
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}
  #         file: ./coverage/clover.xml


  # test-snapshot:
  #   needs: setup
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #       node: [10, 14]

  #   steps:
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ matrix.node }}

  #     - name: checkout
  #       uses: actions/checkout@master

  #     - name: restore workspace cache
  #       uses: actions/cache@v1
  #       with:
  #         path: ${{ github.workspace }}
  #         key: ${{ matrix.os }}-node-v${{ matrix.node }}-nuxt-${{ github.sha }}

  #     - name: test snapshot
  #       run: yarn test:snapshot --ci

  deploy:
    needs: lint
    runs-on: ${{ matrix.os }}
    env:
      API_KEY: ${{ secrets.API_KEY_DEV }}
      AUTH_DOMAIN: ${{ secrets.AUTH_DOMAIN_DEV }}
      DATABASE_URL: ${{ secrets.DATABASE_URL_DEV }}
      PROJECT_ID: ${{ secrets.PROJECT_ID_DEV }}
      STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET_DEV }}
      MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID_DEV }}
      APP_ID: ${{ secrets.APP_ID_DEV }}
      MEASUREMENT_ID: ${{ secrets.MEASUREMENT_ID_DEV }}
      TTTT: ${{ secrets.hello }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@master

      - name: restore workspace cache
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-nuxt-${{ github.sha }}

      - name: generate
        run: |
          echo API_KEY=${{ secrets.API_KEY_DEV }} >> packages/client/.env
          echo AUTH_DOMAIN=${{ secrets.AUTH_DOMAIN_DEV }} >> packages/client/.env
          echo DATABASE_URL=${{ secrets.DATABASE_URL_DEV }} >> packages/client/.env
          echo PROJECT_ID=${{ secrets.PROJECT_ID_DEV }} >> packages/client/.env
          echo STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET_DEV }} >> packages/client/.env
          echo MESSAGING_SENDER_ID=${{ secrets.MESSAGING_SENDER_ID_DEV }} >> packages/client/.env
          echo APP_ID=${{ secrets.APP_ID_DEV }} >> packages/client/.env
          echo MEASUREMENT_ID=${{ secrets.MEASUREMENT_ID_DEV }} >> packages/client/.env
          yarn workspace client generate --fail-on-page-error

      - name: deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN_DEV }}

  lighthouse:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: checkout
        uses: actions/checkout@master

      - run: mkdir /tmp/artifacts

      - name: run Lighthouse
        uses: foo-software/lighthouse-check-action@master
        with:
          author: ${{ github.actor }}
          branch: ${{ github.ref }}
          outputDirectory: /tmp/artifacts
          urls: 'https://roomy-devlop.web.app/,https://roomy-devlop.web.app/public,https://roomy-devlop.web.app/login'
          sha: ${{ github.sha }}
          slackWebhookUrl: ${{ secrets.SLACK_WEBHOOK_URL_DEV }}

      - name: Upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: Lighthouse reports
          path: /tmp/artifacts

      - name: debug
        run: |
          ls -a /tmp/artifacts

  notice:
    needs: lighthouse
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow # selectable (default: repo,message)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_DEV }} # required
        if: always() # Pick up events even if the job fails or is canceled.
